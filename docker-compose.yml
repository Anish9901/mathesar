version: "3.9"
#-------------------------------
# Mathesar's docker compose file
#-------------------------------


#-------------------------------------------------------
# PREREQUISITES:
#-------------------------------------------------------
# OS: Linux, Mac, Windows(WSL).
# Docker v23+ ($: sudo docker version)
# Docker Compose v2.10+ ($: sudo docker compose version)
#-------------------------------------------------------


#--------------------------------------------------
# CONFIG:
#--------------------------------------------------
x-config: &config
  SECRET_KEY: ${SECRET_KEY:?}                       #(Required) Replace '?' with '-' followed by your 50 character long Django SECRET_KEY, you can generate one here: https://djecrety.ir/
  DOMAIN_NAME: ${DOMAIN_NAME:-http://localhost}     #(Optional) Replace 'http://localhost' with custom domain(s) e.g. 'yourdomain.com, 127.0.0.1' to manage the host(s) that can access Mathesar over http or https

  # Edit these if not using the db service provided below.
  POSTGRES_DB: ${POSTGRES_DB:-mathesar_django}      #(Optional) Replace 'mathesar_django' with any custom name for the internal database managed by mathesar web-service
  POSTGRES_USER: ${POSTGRES_USER:-mathesar}         #(Optional) Replace 'mathesar' with any custom username for the aforementioned database
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-mathesar} #(Optional) Replace 'mathesar' with any custom password for the aforementioned database
  POSTGRES_HOST: ${POSTGRES_HOST:-mathesar_db}      #(Optional) Replace 'mathesar_db' with the name of the host running postgres
  POSTGRES_PORT: ${POSTGRES_PORT:-5432}             #(Optional) Replace '5432' with the port on which postgres is running
#--------------------------------------------------


#-------------------------------------------------#
# HOW TO RUN THIS FILE:                           #
#-------------------------------------------------#
# $: sudo docker compose -f docker-compose.yml up #
#-------------------------------------------------#


#------------------------------------------------------------------------------
# ADDITIONAL INFO ABOUT ENVIRONMENT VARIABLES:
#------------------------------------------------------------------------------
#
# SECRET_KEY:
#     Default: N/A
#     Info: A unique secret key required to be set by the user for Django's 
#           security protection features. You can read more about it here: 
#           https://docs.djangoproject.com/en/4.2/ref/settings/#secret-key
#     Example: a_very_insecure_secret_key1*zobb123)k(_d1%wubkv6#
#
# DOMAIN_NAME:
#     Default: http://localhost
#     Info: Specifies the domains that can access Mathesar over http(port 80)
#           or https(port 443), also automatically creating SSL certificates 
#           for the same. If you want to host an instance of Mathesar over the
#           internet or over your local network, add those domains here.
#     Example: yourdomain.com, *.subdomain.com, 127.0.0.1
#
# POSTGRES_DB:
#     Default: mathesar_django
#     Info: Specifies a name for the database that will be managed by Mathesar
#           for internal bookkeeping.
#     Example: zeus
#
# POSTGRES_USER:
#     Default: mathesar
#     Info: Specifies creation of a user with superuser privileges 
#           and a database with the same name.
#     Example: athena
#
# POSTGRES_PASSWORD:
#     Default: mathesar
#     Info: Specifies the superuser password that is required to be set for the
#           PostgreSQL docker image.
#     Example: apollo
#
# POSTGRES_HOST:
#     Default: mathesar_db (name of the db service provided below)
#     Info: Specifies the host name on which portgres listen for connections
#           from client applications.
#     Example: kratos
#
# POSTGRES_PORT:
#     Default: 5432
#     Info: Specifies the port on which portgres listen for connections from
#           client applications.
#     Example: 5555
#
#------------------------------------------------------------------------------


#------------------------------------------------------------------------------
# INFO ABOUT VOLUMES 
#------------------------------------------------------------------------------
#
# Volumes are the way containers persist essential data.
#
# Running this compose file will automatically create a volume named "msar" 
# with the following file structure.
# 
# msar
# ├── caddy/  (stores SSL certificates, private keys, and other necessary information for Caddy)
# ├── media/  (stores user uploaded datafiles(.csv/.tsv) to Mathesar)
# ├── pgdata/ (stores user's PostgreSQL data)
# └── static/ (stores static files for Mathesar)
#
#------------------------------------------------------------------------------


services:


#------------------------------------------------------------------------------
# Mathesar web service
#------------------------------------------------------------------------------
#
# - This service provides a web server required to run Mathesar.
#
# - This service pulls from our official Docker image hosted on Docker Hub
#   (https://hub.docker.com/r/mathesar/mathesar-prod).
#
# - This service sits behind a caddy reverse proxy which routes the requests
#   to backend and the web frontend of Mathesar while also serving essential
#   staic files and user uploaded datafiles(.csv/.tsv)
#
# - This service exposes the web-servers port(8000) to other services
#   but not the host system. This isolates it from being directly accessed 
#   by the host while allowing access via caddy.
#
#------------------------------------------------------------------------------

  service:
    container_name: mathesar_service
    image: mathesar/mathesar-prod:latest
    environment: 
      <<: *config
      DJANGO_SETTINGS_MODULE: config.settings.production
      # Setting ALLOWED_HOSTS to * (allow all hosts) by default here as we are
      # relying on caddy to manage which domains could access the mathesar web service. 
      # If you do not want to use caddy add the domain(s) that you would've used 
      # for DOMAIN_NAME env in ALLOWED_HOSTS.
      ALLOWED_HOSTS: ${ALLOWED_HOSTS:-*}
      # MATHESAR_DATABASES should be removed once connections stuff is merged
      MATHESAR_DATABASES: ${MATHESAR_DATABASES-(mathesar_tables|postgresql://mathesar:mathesar@mathesar_db:5432/mathesar)}
    entrypoint: ./run.sh
    volumes:
      # TODO: DON'T FORGET TO REMOVE THIS CONFIG DIRECTORY!
      - ./config/settings:/code/config/settings
      # TODO: SHOULD THESE BE REMOVED AS WE ARE USING CADDY?
      - ./msar/static:/code/static
      - ./msar/media:/code/media
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: curl -f http://localhost:8000
      interval: 10s
      timeout: 5s
      retries: 30
      start_period: 5s
    # If using caddy, expose the internal port 8000 only to other containers and not
    # the docker host. 
    expose:
      - "8000"
    # Uncomment the following if not using caddy
    # ports:
    #   - ${HOST_PORT:-8000}:8000


#------------------------------------------------------------------------------
# PostgreSQL
#------------------------------------------------------------------------------
#
# - This service provides a Postgres database instance for connecting to the
#   Mathesar web service.
#
# - This service pulls from the official PostgreSQL image hosted on Docker Hub
#   (https://hub.docker.com/_/postgres).
#
# - This service is essential for Mathesar's internal bookeeping
#   and can also be used to store user's data.
#
# - This service exposes Postgres' default port(5432) to other services
#   allowing Mathesar web sevice to connect to it.
#
#------------------------------------------------------------------------------

  db:
    image: postgres:13
    container_name: mathesar_db
    environment: *config
    # Expose the internal port 5432 only to other containers and not 
    # the docker host.
    expose:
      - "5432"
    volumes:
      - ./msar/pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 1s
      retries: 30
      start_period: 5s


#------------------------------------------------------------------------------
# Caddy
#------------------------------------------------------------------------------
#
# - This service acts as a reverse proxy for the Mathesar web server.
#
# - This service pulls from our custom Caddy image hosted on Docker Hub
#   (https://hub.docker.com/r/mathesar/mathesar-caddy).
#
# - This image is customized to use the Caddyfile with the appropriate 
#   configuration for Mathesar.
#
# - This service routes the requests to backend and the web frontend of Mathesar
#   while also serving essential staic files and user uploaded datafiles(.csv/.tsv)
#
# - This service also provides SSL certificates automatically for any
#   custom domain(s) listed in DOMAIN_NAME that you might want to use to access
#   Mathesar.
#
# - This service maps the default port for http(80) and https(443) of the host
#   system to that of docker's for allowing access to Mathesar over http or https.
#
#------------------------------------------------------------------------------

  caddy-reverse-proxy:
    image: mathesar/mathesar-caddy:latest
    environment:
     <<: *config
    # SHOULD WE BE HARD CODING THESE PORTS?
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # TODO: REMOVE CADDYFILE MOUNT
      - ./Caddyfile:/etc/caddy/Caddyfile
      - ./msar/media:/code/media
      - ./msar/static:/code/static
      - ./msar/caddy:/data
