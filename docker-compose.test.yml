version: "3.9"
#------------------------------
# Mathesar's docker compose file
#------------------------------



#------------------------------------------------
# REQUIRED CONFIG:
#------------------------------------------------
x-initial_config: &initial_config
  SECRET_KEY: ${SECRET_KEY:?}                       #(Required) Replace '?' with your Django SECRET_KEY, you can generate one here: https://djecrety.ir/
  ALLOWED_HOSTS: ${ALLOWED_HOSTS:-localhost}                #(Optional) Replace '*' with custom domain(s) e.g. '.yourdomain.com, 127.0.0.1' to manage the host(s) that can access Mathesar. 
  POSTGRES_DB: ${POSTGRES_DB:-mathesar_django}      #(Optional) Replace 'mathesar_django' with any custom name for the internal database managed by mathesar web-service
  POSTGRES_USER: ${POSTGRES_USER:-mathesar}         #(Optional) Replace 'mathesar' with any custom username for the aforementioned database
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-mathesar} #(Optional) Replace 'mathesar' with any custom password for the aforementioned database
#------------------------------------------------



#-------------------------------------------------#
# HOW TO RUN THIS FILE:                           #
#-------------------------------------------------#
# $: sudo docker compose -f docker-compose.yml up #
#-------------------------------------------------#



#------------------------------------------------
# ADDITIONAL INFO:
#------------------------------------------------
# 
# SECRET_KEY:
#     Default: N/A
#     Info: A unique secret key required to be set by user for Django's security protection features.
#           You can read more about it here: https://docs.djangoproject.com/en/4.2/ref/settings/#secret-key
#     Example: a_very_insecure_secret_key1*zobb123)k(_d1%wubkv6#
# 
# ALLOWED_HOSTS:
#     Default: * (i.e. all domains allowed)
#     Info: Specifies the domains that can access Mathesar.
#           You can read more about it here: https://docs.djangoproject.com/en/4.2/ref/settings/#allowed-hosts
#     Example: .localhost, 127.0.0.1, www.example.com, .yourdomain.com
#
# POSTGRES_DB:
#     Default: mathesar_django
#     Info: Specifies a name for the database that will be used for internal bookkeeping by Mathesar.
#     Example: zeus
#
# POSTGRES_USER:
#     Default: mathesar
#     Info: Specifies creation of a user with superuser privileges and a database with the same name.
#     Example: athena
#
# POSTGRES_PASSWORD:
#     Default: mathesar
#     Info: Specifies the superuser password and is required to be set for the PostgreSQL docker image.
#     Example: apollo
#------------------------------------------------


services:
  db:
    image: postgres:13
    container_name: mathesar_db
    environment: *initial_config
    expose:
      - "5432"
    volumes:
      - postgresql_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 1s
      retries: 30
      start_period: 5s
  
  # caddy-reverse-proxy:
  #   image: mathesar/mathesar-caddy:latest
  #   environment:
  #    <<: *initial_config
  #    # DOMAIN_NAME: 
  #   # caddy container is exposed to the other containers, and the host.
  #   ports:
  #     - "${HTTP_PORT-80}:80"
  #     - "${HTTPS_PORT-443}:443"
  #   volumes:
  #     - $PWD/Caddyfile:/etc/caddy/Caddyfile
  #     - media:/mathesar/media
  #     - static:/mathesar/static
  #     - caddy_data:/data
  #     - caddy_config:/config
  caddy-reverse-proxy:
    image: mathesar/mathesar-caddy:latest
    environment:
      - DOMAIN_NAME=${DOMAIN_NAME-http://localhost, asdf.localhost}
    # caddy container is exposed to the other containers, and the host.
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - media:/mathesar/media
      - static:/mathesar/static
      - caddy_data:/data
      - caddy_config:/config
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
  # TODO: Add caddy.
  service:
    container_name: mathesar_service
    image: mathesar/mathesar-prod:latest
    environment: 
      <<: *initial_config
      DJANGO_SETTINGS_MODULE: config.settings.production
      # MATHESAR_DATABASES should be removed once connections stuff is merged
      MATHESAR_DATABASES: ${MATHESAR_DATABASES-(mathesar_tables|postgresql://mathesar:mathesar@mathesar_db:5432/mathesar)}
    entrypoint: ./run.sh
    volumes:
      # TODO: DON'T FORGET TO REMOVE THIS CODE DIRECTORY!
      - .:/code/
      - static:/code/static
      - media:/code/media
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: curl -f http://localhost:8000
      interval: 10s
      timeout: 5s
      retries: 30
      start_period: 5s
    # TODO: Turn to expose again after adding caddy.
    expose:
      - "8000"
volumes:
  postgresql_data:
  media:
  static:
  caddy_data:
  caddy_config:
